{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Validators, ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nfunction DataFormComponent_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\u0420\\u043E\\u0437\\u043C\\u0456\\u0440 \\u043C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0456 \\u0454 \\u043E\\u0431\\u043E\\u0432'\\u044F\\u0437\\u043A\\u043E\\u0432\\u0438\\u043C \\u043F\\u043E\\u043B\\u0435\\u043C.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DataFormComponent_div_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"\\u0420\\u043E\\u0437\\u043C\\u0456\\u0440 \\u043C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0456 \\u043F\\u043E\\u0432\\u0438\\u043D\\u0435\\u043D \\u0431\\u0443\\u0442\\u0438 \\u0431\\u0456\\u043B\\u044C\\u0448\\u0435 0.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DataFormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DataFormComponent_div_5_div_1_Template, 2, 0, \"div\", 3);\n    i0.ɵɵtemplate(2, DataFormComponent_div_5_div_2_Template, 2, 0, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dataForm.get(\"matrixSize\").errors == null ? null : ctx_r0.dataForm.get(\"matrixSize\").errors.required);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.dataForm.get(\"matrixSize\").errors == null ? null : ctx_r0.dataForm.get(\"matrixSize\").errors.min);\n  }\n}\nlet DataFormComponent = /*#__PURE__*/(() => {\n  class DataFormComponent {\n    constructor(formBuilder) {\n      this.formBuilder = formBuilder;\n      this.formData = new EventEmitter();\n    }\n    ngOnInit() {\n      this.dataForm = this.formBuilder.group({\n        matrixSize: ['', [Validators.required, Validators.pattern(/^[1-9]\\d*$/)]]\n      });\n    }\n    onSubmit() {\n      if (this.dataForm.invalid) {\n        console.log(\"!!!!!\");\n        return;\n      }\n      // Отримання даних з форми\n      const data = this.dataForm.value;\n      // Відправка даних до головного компонента\n      this.formData.emit(data);\n    }\n  }\n  DataFormComponent.ɵfac = function DataFormComponent_Factory(t) {\n    return new (t || DataFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  DataFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataFormComponent,\n    selectors: [[\"app-data-form\"]],\n    outputs: {\n      formData: \"formData\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 8,\n    vars: 3,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"matrixSize\"], [\"type\", \"number\", \"id\", \"matrixSize\", \"formControlName\", \"matrixSize\"], [4, \"ngIf\"], [\"type\", \"submit\", 3, \"disabled\"]],\n    template: function DataFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DataFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"\\u0420\\u043E\\u0437\\u043C\\u0456\\u0440 \\u043C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0456:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵtemplate(5, DataFormComponent_div_5_Template, 3, 2, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵtext(7, \"\\u041F\\u043E\\u0447\\u0430\\u0442\\u0438 \\u043E\\u0431\\u0440\\u043E\\u0431\\u043A\\u0443\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.dataForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataForm.get(\"matrixSize\").invalid && (ctx.dataForm.get(\"matrixSize\").dirty || ctx.dataForm.get(\"matrixSize\").touched));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", ctx.dataForm.invalid);\n      }\n    },\n    dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin-bottom:10px}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;font-weight:700}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:5px}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{color:red;margin-top:5px}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:10px;color:#00f}\"]\n  });\n  return DataFormComponent;\n})();\nexport { DataFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}