{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../service/calculation.service\";\nlet DataFormComponent = /*#__PURE__*/(() => {\n  class DataFormComponent {\n    constructor(formBuilder, calculationService) {\n      this.formBuilder = formBuilder;\n      this.calculationService = calculationService;\n      this.matrixData = new EventEmitter();\n      this.dataForm = this.formBuilder.group({\n        matrixSize: ['', [Validators.required, Validators.min(1)]]\n      });\n    }\n    onSubmit() {\n      if (this.dataForm.invalid) {\n        return;\n      }\n      const N = this.dataForm.value.matrixSize;\n      const matrix = this.calculationService.calculateMatrix(N);\n      this.matrixData.emit(matrix);\n    }\n  }\n  DataFormComponent.ɵfac = function DataFormComponent_Factory(t) {\n    return new (t || DataFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CalculationService));\n  };\n  DataFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataFormComponent,\n    selectors: [[\"app-data-form\"]],\n    outputs: {\n      matrixData: \"matrixData\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 7,\n    vars: 1,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"for\", \"matrixSize\"], [\"type\", \"number\", \"id\", \"matrixSize\", \"formControlName\", \"matrixSize\"], [\"type\", \"submit\"]],\n    template: function DataFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function DataFormComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"div\")(2, \"label\", 1);\n        i0.ɵɵtext(3, \"\\u0420\\u043E\\u0437\\u043C\\u0456\\u0440 \\u043C\\u0430\\u0442\\u0440\\u0438\\u0446\\u0456:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"input\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 3);\n        i0.ɵɵtext(6, \"\\u041F\\u043E\\u0447\\u0430\\u0442\\u0438 \\u043E\\u0431\\u0440\\u043E\\u0431\\u043A\\u0443\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.dataForm);\n      }\n    },\n    dependencies: [ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{margin-bottom:10px}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{display:block;font-weight:700}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;padding:5px}form[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{color:red;margin-top:5px}form[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{margin-top:10px;color:#00f}\"]\n  });\n  return DataFormComponent;\n})();\nexport { DataFormComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}